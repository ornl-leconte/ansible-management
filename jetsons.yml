# Jetson TX2 ansible script
#
# On first run, pass -K so ansible can set up passwordless sudo
#
# Any item which requires root privs should use become: yes
#
# Octal file permissions require a leading zero
#

- name: "group {{projectgroup}}"
  group:
    name: "{{projectgroup}}"
    gid: "{{projectgid}}"
    state: present
  become: true

- name: "user added to {{projectgroup}} group"
  user:
    name: "{{item}}"
    groups: "sudo,{{projectgroup}}"
    append: yes
    state: present
    createhome: yes
  with_items:
    - "{{ansible_user}}"
  become: true

- name: ensure apt multiverse is enabled
  apt_repository:
    repo: "{{item}}"
    state: present
    update_cache: false
  register: multiverse_installed
  with_items:
    - deb http://ports.ubuntu.com/ubuntu-ports/ xenial main restricted multiverse universe
    - deb-src http://ports.ubuntu.com/ubuntu-ports/ xenial main restricted multiverse universe
    - deb http://ports.ubuntu.com/ubuntu-ports/ xenial-updates main restricted multiverse universe
    - deb-src http://ports.ubuntu.com/ubuntu-ports/ xenial-updates main restricted multiverse universe
    - deb http://ports.ubuntu.com/ubuntu-ports/ xenial-security main restricted multiverse universe
    - deb-src http://ports.ubuntu.com/ubuntu-ports/ xenial-security main restricted multiverse universe
  become: true
  tags: [apt]

- name: update apt cache
  apt:
    update_cache: true
  when:
    - multiverse_installed | changed
  become: true

- name: install user packages
  apt:
    name: "{{item}}"
    state: latest
  with_items:
    - traceroute
    - iperf
    - htop
    - tmux
    - vim
    - zsh
  become: true
  tags: [apt]

############
# Passwordless sudo for ansible
# you may need to run ansible with -K on the first run
- name: nopasswdsudo in sudoers.d/
  copy:
    src: files/nopasswd-sudo
    dest: /etc/sudoers.d/nopasswd-sudo
    owner: root
    group: root
    mode: 0440
  become: true
  become_user: root

############
# Python things setup
- name: python apt packages
  apt:
    name: "{{item}}"
    state: latest
  with_items:
    - python-pip
    - python3-apt
    - python3-pip
    - python3-numpy
    - python3-virtualenv
  become: true
  tags: [apt]

############
# Development packages
- name: development apt packages
  apt:
    name: "{{item}}"
    state: latest
  with_items:
    - autoconf
    - automake
    - libtool
    - wget
    - curl
    - make
    - g++
    - unzip
    - zlib1g-dev
    - git
    - ttf-ubuntu-font-family
    - fonts-ubuntu-font-family-console
    - libsdl2-dev
    - mpich
    - libsdl2-ttf-dev
    - libnotify-bin
  become: true
  tags: [apt]

############
# Jetson clockspeed settings
- name: "ensure {{projectroot}} dir exists"
  file:
    path: "{{projectroot}}"
    state: directory
    owner: root
    group: "{{projectgroup}}"
    mode: "02775" # setgid rwx rwx r-x
  become: true
- name: ensure jetson_settings dir exists
  file:
    path: "{{projectroot}}/jetson_settings"
    state: directory
    owner: root
    group: "{{projectgroup}}"
    mode: "02775" # setgid rwx rwx r-x
  become: true
- name: copy jetson clock configs
  copy:
    src: "{{item}}"
    dest: "{{projectroot}}/{{item}}"
    owner: root
    group: "{{projectgroup}}"
    mode: 0664 # rw- rw- r--
  with_items:
    - jetson_settings/clock-idle
    - jetson_settings/clock-max
    - jetson_settings/clock-gpu-max
    - jetson_settings/clock-low
  become: true
- name: jetson clocks script
  copy:
    src: "jetson_clocks.sh"
    dest: "{{projectroot}}/jetson_clocks.sh"
    owner: root
    group: "{{projectgroup}}"
    mode: "0774" # rwx rwx r--
  become: true
- name: symlink jetson_clocks in usr/local/bin
  file:
    src: /leconte/jetson_clocks.sh
    dest: /usr/local/bin/jetson_clocks
    owner: root
    group: "{{projectgroup}}"
    state: link
    mode: "0755" # rwx r-x r-x
  become: true
